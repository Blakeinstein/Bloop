# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [Release]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      # Set up core dependencies
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      # Get Boop scripts
      - name: Get Boop scripts
        run: |
          mkdir src-tauri
          git clone http://github.com/ivanmathy/boop
          mv boop/Boop/Boop/scripts src-tauri/

      # Build web component
      - name: install app dependencies and build it
        run: yarn && yarn build

      # Copy data over to replicate tauri config
      - name: config directory
        run: |
          mv dist src-tauri/
          mv src src-tauri/
          mv icons src-tauri/
          mv keys src-tauri/
          mv ./Cargo.toml src-tauri/
          mv ./tauri.conf.json src-tauri/
          mv ./build.rs src-tauri/

      # Create release
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Release v__VERSION__"
          releaseBody: "Release v__VERSION__."
          draft: true
          prerelease: false
